// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type CalculatedDay struct {
	Date               string              `json:"date"`
	Recipes            []*CalculatedRecipe `json:"recipes"`
	Price              float64             `json:"price"`
	EnergyValueKcal    float64             `json:"energyValueKcal"`
	Fat                float64             `json:"fat"`
	SaturatedFat       float64             `json:"saturatedFat"`
	Carbohydrate       float64             `json:"carbohydrate"`
	CarbohydrateSugars float64             `json:"carbohydrateSugars"`
	Fibre              float64             `json:"fibre"`
	Protein            float64             `json:"protein"`
	Salt               float64             `json:"salt"`
}

type CalculatedProduct struct {
	Product            string  `json:"product"`
	VarietyName        string  `json:"varietyName"`
	Price              float64 `json:"price"`
	Unit               string  `json:"unit"`
	Quantity           float64 `json:"quantity"`
	EnergyValueKcal    float64 `json:"energyValueKcal"`
	Fat                float64 `json:"fat"`
	SaturatedFat       float64 `json:"saturatedFat"`
	Carbohydrate       float64 `json:"carbohydrate"`
	CarbohydrateSugars float64 `json:"carbohydrateSugars"`
	Fibre              float64 `json:"fibre"`
	Protein            float64 `json:"protein"`
	Salt               float64 `json:"salt"`
}

type CalculatedRecipe struct {
	RecipeName         string               `json:"recipeName"`
	Products           []*CalculatedProduct `json:"products"`
	Portion            float64              `json:"portion"`
	Price              float64              `json:"price"`
	EnergyValueKcal    float64              `json:"energyValueKcal"`
	Fat                float64              `json:"fat"`
	SaturatedFat       float64              `json:"saturatedFat"`
	Carbohydrate       float64              `json:"carbohydrate"`
	CarbohydrateSugars float64              `json:"carbohydrateSugars"`
	Fibre              float64              `json:"fibre"`
	Protein            float64              `json:"protein"`
	Salt               float64              `json:"salt"`
}

type Ingredient struct {
	Product  string  `json:"product"`
	Quantity float64 `json:"quantity"`
	Unit     string  `json:"unit"`
	Notes    string  `json:"notes"`
}

type IngredientInput struct {
	Product  string  `json:"product"`
	Quantity float64 `json:"quantity"`
	Unit     string  `json:"unit"`
	Notes    string  `json:"notes"`
}

type Mutation struct {
}

type NutritionalValue struct {
	ID                 string  `json:"id"`
	Unit               string  `json:"unit"`
	EnergyValueKcal    float64 `json:"energyValueKcal"`
	Fat                float64 `json:"fat"`
	SaturatedFat       float64 `json:"saturatedFat"`
	Carbohydrate       float64 `json:"carbohydrate"`
	CarbohydrateSugars float64 `json:"carbohydrateSugars"`
	Fibre              float64 `json:"fibre"`
	Protein            float64 `json:"protein"`
	Salt               float64 `json:"salt"`
}

type NutritionalValueInput struct {
	Unit               string  `json:"unit"`
	EnergyValueKcal    float64 `json:"energyValueKcal"`
	Fat                float64 `json:"fat"`
	SaturatedFat       float64 `json:"saturatedFat"`
	Carbohydrate       float64 `json:"carbohydrate"`
	CarbohydrateSugars float64 `json:"carbohydrateSugars"`
	Fibre              float64 `json:"fibre"`
	Protein            float64 `json:"protein"`
	Salt               float64 `json:"salt"`
}

type PlanRecipe struct {
	RecipeName string  `json:"recipeName"`
	Portion    float64 `json:"portion"`
}

type PreparedRecipeAggregate struct {
	RecipeName   string        `json:"recipeName"`
	Steps        []string      `json:"steps"`
	Notes        string        `json:"notes"`
	Ingredients  []*Ingredient `json:"ingredients"`
	PreparedDate string        `json:"preparedDate"`
	Portion      float64       `json:"portion"`
}

type PreparedRecipeInput struct {
	RecipeName   string             `json:"recipeName"`
	Steps        []string           `json:"steps"`
	Notes        string             `json:"notes"`
	Ingredients  []*IngredientInput `json:"ingredients"`
	PreparedDate string             `json:"preparedDate"`
	Portion      float64            `json:"portion"`
}

type Product struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type ProductAggregate struct {
	Name      string     `json:"name"`
	Varieties []*Variety `json:"varieties"`
}

type ProductAggregateInput struct {
	Name             string                 `json:"name"`
	VarietyName      string                 `json:"varietyName"`
	NutritionalValue *NutritionalValueInput `json:"nutritionalValue,omitempty"`
	Purchase         *PurchaseInput         `json:"purchase,omitempty"`
}

type Purchase struct {
	ID       string  `json:"id"`
	Date     string  `json:"date"`
	Quantity float64 `json:"quantity"`
	Price    float64 `json:"price"`
	Retailer string  `json:"retailer"`
	Unit     string  `json:"unit"`
	Notes    string  `json:"notes"`
}

type PurchaseInput struct {
	Date     string  `json:"date"`
	Quantity float64 `json:"quantity"`
	Price    float64 `json:"price"`
	Retailer string  `json:"retailer"`
	Unit     string  `json:"unit"`
	Notes    string  `json:"notes"`
}

type Query struct {
}

type RecipeAggregate struct {
	RecipeName  string        `json:"recipeName"`
	IsFavorite  bool          `json:"isFavorite"`
	Steps       []string      `json:"steps"`
	Notes       string        `json:"notes"`
	Ingredients []*Ingredient `json:"ingredients"`
}

type RecipeInput struct {
	RecipeName  string             `json:"recipeName"`
	IsFavorite  bool               `json:"isFavorite"`
	Steps       []string           `json:"steps"`
	Notes       string             `json:"notes"`
	Ingredients []*IngredientInput `json:"ingredients"`
}

type Variety struct {
	VarietyName      string            `json:"varietyName"`
	NutritionalValue *NutritionalValue `json:"nutritionalValue,omitempty"`
	Purchases        []*Purchase       `json:"purchases"`
}
